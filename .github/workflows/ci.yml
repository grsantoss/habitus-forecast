name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm install
          cd client && npm install && cd ..

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm install
          cd client && npm install && cd ..

      - name: Build client
        run: npm run build-client

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: production-build
          path: |
            client/build
            server
            package.json
            package-lock.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: production-build

      - name: Deploy to production
        run: |
          # Aqui vocÃª adicionaria os comandos para deploy
          # Por exemplo, usando SSH para conectar ao servidor
          echo "Deploy to production" 