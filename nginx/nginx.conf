server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    # Redireciona para HTTPS em produção (descomente em produção)
    # if ($http_x_forwarded_proto != "https") {
    #     return 301 https://$host$request_uri;
    # }

    # Configurações de segurança
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' ${API_URL} https://api.habitus-forecast.com";
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # Configurações de gzip
    gzip on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Diretório raiz
    root /usr/share/nginx/html;
    index index.html;

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=10r/s;
    limit_req zone=frontend burst=20 nodelay;
    
    # Cache de arquivos estáticos
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Rota para a API
    location /api/ {
        proxy_pass ${API_URL};
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_redirect off;
    }

    # Rota para o aplicativo React
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Restringe acesso a arquivos ocultos e backup
    location ~ /\. {
        deny all;
        return 404;
    }
    
    location ~ ~$ {
        deny all;
        return 404;
    }

    # Erro 404
    error_page 404 /index.html;

    # Erros 500, 502, 503, 504
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 