FROM node:18-alpine as build

# Define variáveis de ambiente
ARG REACT_APP_API_URL
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV} \
    REACT_APP_API_URL=${REACT_APP_API_URL}

# Define o diretório de trabalho
WORKDIR /app

# Copia os arquivos de dependências
COPY package.json package-lock.json* ./

# Instala dependências
RUN npm ci --silent

# Copia o código fonte
COPY . .

# Constrói a aplicação
RUN npm run build

# Imagem final para produção usando Nginx
FROM nginx:alpine

# Copia a configuração do Nginx
COPY ./nginx/nginx.conf /etc/nginx/conf.d/default.conf

# Copia os arquivos de build do estágio anterior
COPY --from=build /app/build /usr/share/nginx/html

# Adiciona script para substituir variáveis de ambiente em runtime
COPY ./nginx/env.sh /docker-entrypoint.d/40-env.sh
RUN chmod +x /docker-entrypoint.d/40-env.sh

# Define variáveis de ambiente para o script
ENV NGINX_PORT=80 \
    API_URL="" \
    APP_ENV="production"

# Expõe a porta
EXPOSE 80 443

# O Nginx já tem seu próprio CMD 